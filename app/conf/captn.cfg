# This whole config example needs to be compared to the defaults before publishing!
# It will be just an example though....

[general]
dryRun = false

[update]
# Meant to run at night while you're sleeping - a small pause to keep things graceful between updates of the same container.
delayBetweenUpdates =  15s

[updateVerification]
# Total time we're willing to wait for the container to become stable.
maxWait = 480s
# How many seconds the container must stay healthy (or unchanged) to be considered stable.
stableTime = 15s
# How often we check the container's status.
checkInterval = 5s
# Time after container start during which we wait for the container to come up.
gracePeriod = 15s

[prune]
# Out with the old! No freeloaders allowed.
removeUnusedImages = true
# Containers are like leftovers - toss them before they smell.
removeOldContainers = true
# Nothing under 48h gets deleted. Even backups deserve a short life.
minBackupAge = 0h
# Always keep one - for old timeâ€™s sake.
minBackupsToKeep = 0

[docker]
apiUrl = https://registry.hub.docker.com/v2
# Crawl 'til your legs give out.
pageCrawlLimit = 1000
# Max 100 per page - that's the Docker Hub limit.
pageSize = 100

[ghcr]
apiUrl = https://ghcr.io/v2
pageCrawlLimit = 1000
# GHCR maxes out at 100 tags per page. Don't get greedy.
pageSize = 100

[logging]
# Because DEBUG is for the brave and ERROR is for the late.
level = INFO

[assignmentsByName]
MariaDB = testing
PostgreSQL-Immich = strict
PostgreSQL = strict
Container-Updater = default
redis = testing
immich-server = immich
immich-machine-learning = immich
captn = strict
captn-dev = strict

[rules]
default =       {
                    "minImageAge": "3h",
                    "progressiveUpgrade": true,
                    "allow": {
                        "major": true,
                        "minor": true,
                        "patch": true,
                        "build": true,
                        "digest": true
                    }
                }
testing =       {
                    "minImageAge": "3h",
                    "progressiveUpgrade": true,
                    "allow": {
                        "major": true,
                        "minor": true,
                        "patch": true,
                        "build": true,
                        "digest": true
                    }
                }
immich =        {
                    "minImageAge": "3h",
                    "allow": {
                        "major": true,
                        "minor": true,
                        "patch": true,
                        "build": true,
                        "digest": true
                    },
                    "conditions": {
                        "major": {
                            "require": ["minor", "patch", "build"]
                        },
                        "minor": {
                            "require": ["patch", "build"]
                        }
                    },
                    "lagPolicy": {
                        "major": 1
                    }
                }
